// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: calendar/calendar.proto

package calendar

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventResponse) Reset() {
	*x = CreateEventResponse{}
	mi := &file_calendar_calendar_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventResponse) ProtoMessage() {}

func (x *CreateEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_calendar_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventResponse.ProtoReflect.Descriptor instead.
func (*CreateEventResponse) Descriptor() ([]byte, []int) {
	return file_calendar_calendar_proto_rawDescGZIP(), []int{0}
}

func (x *CreateEventResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateEventResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdateEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEventResponse) Reset() {
	*x = UpdateEventResponse{}
	mi := &file_calendar_calendar_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventResponse) ProtoMessage() {}

func (x *UpdateEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_calendar_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventResponse.ProtoReflect.Descriptor instead.
func (*UpdateEventResponse) Descriptor() ([]byte, []int) {
	return file_calendar_calendar_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateEventResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventRequest) Reset() {
	*x = DeleteEventRequest{}
	mi := &file_calendar_calendar_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventRequest) ProtoMessage() {}

func (x *DeleteEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_calendar_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventRequest.ProtoReflect.Descriptor instead.
func (*DeleteEventRequest) Descriptor() ([]byte, []int) {
	return file_calendar_calendar_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventResponse) Reset() {
	*x = DeleteEventResponse{}
	mi := &file_calendar_calendar_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventResponse) ProtoMessage() {}

func (x *DeleteEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_calendar_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventResponse.ProtoReflect.Descriptor instead.
func (*DeleteEventResponse) Descriptor() ([]byte, []int) {
	return file_calendar_calendar_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteEventResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetEventByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventByIDRequest) Reset() {
	*x = GetEventByIDRequest{}
	mi := &file_calendar_calendar_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventByIDRequest) ProtoMessage() {}

func (x *GetEventByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_calendar_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventByIDRequest.ProtoReflect.Descriptor instead.
func (*GetEventByIDRequest) Descriptor() ([]byte, []int) {
	return file_calendar_calendar_proto_rawDescGZIP(), []int{4}
}

func (x *GetEventByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetEventByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventByIDResponse) Reset() {
	*x = GetEventByIDResponse{}
	mi := &file_calendar_calendar_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventByIDResponse) ProtoMessage() {}

func (x *GetEventByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_calendar_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventByIDResponse.ProtoReflect.Descriptor instead.
func (*GetEventByIDResponse) Descriptor() ([]byte, []int) {
	return file_calendar_calendar_proto_rawDescGZIP(), []int{5}
}

func (x *GetEventByIDResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type ListEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventsRequest) Reset() {
	*x = ListEventsRequest{}
	mi := &file_calendar_calendar_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsRequest) ProtoMessage() {}

func (x *ListEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_calendar_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsRequest.ProtoReflect.Descriptor instead.
func (*ListEventsRequest) Descriptor() ([]byte, []int) {
	return file_calendar_calendar_proto_rawDescGZIP(), []int{6}
}

type ListEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventsResponse) Reset() {
	*x = ListEventsResponse{}
	mi := &file_calendar_calendar_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsResponse) ProtoMessage() {}

func (x *ListEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_calendar_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsResponse.ProtoReflect.Descriptor instead.
func (*ListEventsResponse) Descriptor() ([]byte, []int) {
	return file_calendar_calendar_proto_rawDescGZIP(), []int{7}
}

func (x *ListEventsResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type ListEventsByUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventsByUserRequest) Reset() {
	*x = ListEventsByUserRequest{}
	mi := &file_calendar_calendar_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventsByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsByUserRequest) ProtoMessage() {}

func (x *ListEventsByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_calendar_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsByUserRequest.ProtoReflect.Descriptor instead.
func (*ListEventsByUserRequest) Descriptor() ([]byte, []int) {
	return file_calendar_calendar_proto_rawDescGZIP(), []int{8}
}

func (x *ListEventsByUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListEventsByUserInRangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	From          int64                  `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	To            int64                  `protobuf:"varint,3,opt,name=to,proto3" json:"to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventsByUserInRangeRequest) Reset() {
	*x = ListEventsByUserInRangeRequest{}
	mi := &file_calendar_calendar_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventsByUserInRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsByUserInRangeRequest) ProtoMessage() {}

func (x *ListEventsByUserInRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calendar_calendar_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsByUserInRangeRequest.ProtoReflect.Descriptor instead.
func (*ListEventsByUserInRangeRequest) Descriptor() ([]byte, []int) {
	return file_calendar_calendar_proto_rawDescGZIP(), []int{9}
}

func (x *ListEventsByUserInRangeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListEventsByUserInRangeRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *ListEventsByUserInRangeRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

var File_calendar_calendar_proto protoreflect.FileDescriptor

const file_calendar_calendar_proto_rawDesc = "" +
	"\n" +
	"\x17calendar/calendar.proto\x12\bcalendar\x1a\x15calendar/events.proto\"?\n" +
	"\x13CreateEventResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"/\n" +
	"\x13UpdateEventResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"$\n" +
	"\x12DeleteEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"/\n" +
	"\x13DeleteEventResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"%\n" +
	"\x13GetEventByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"=\n" +
	"\x14GetEventByIDResponse\x12%\n" +
	"\x05event\x18\x01 \x01(\v2\x0f.calendar.EventR\x05event\"\x13\n" +
	"\x11ListEventsRequest\"=\n" +
	"\x12ListEventsResponse\x12'\n" +
	"\x06events\x18\x01 \x03(\v2\x0f.calendar.EventR\x06events\"2\n" +
	"\x17ListEventsByUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"]\n" +
	"\x1eListEventsByUserInRangeRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04from\x18\x02 \x01(\x03R\x04from\x12\x0e\n" +
	"\x02to\x18\x03 \x01(\x03R\x02to2\xab\x04\n" +
	"\x0fCalendarService\x12=\n" +
	"\vCreateEvent\x12\x0f.calendar.Event\x1a\x1d.calendar.CreateEventResponse\x12=\n" +
	"\vUpdateEvent\x12\x0f.calendar.Event\x1a\x1d.calendar.UpdateEventResponse\x12J\n" +
	"\vDeleteEvent\x12\x1c.calendar.DeleteEventRequest\x1a\x1d.calendar.DeleteEventResponse\x12M\n" +
	"\fGetEventByID\x12\x1d.calendar.GetEventByIDRequest\x1a\x1e.calendar.GetEventByIDResponse\x12G\n" +
	"\n" +
	"ListEvents\x12\x1b.calendar.ListEventsRequest\x1a\x1c.calendar.ListEventsResponse\x12S\n" +
	"\x10ListEventsByUser\x12!.calendar.ListEventsByUserRequest\x1a\x1c.calendar.ListEventsResponse\x12a\n" +
	"\x17ListEventsByUserInRange\x12(.calendar.ListEventsByUserInRangeRequest\x1a\x1c.calendar.ListEventsResponseB?Z=github.com/dimryb/go-hw/hw12_13_14_15_calendar/proto/calendarb\x06proto3"

var (
	file_calendar_calendar_proto_rawDescOnce sync.Once
	file_calendar_calendar_proto_rawDescData []byte
)

func file_calendar_calendar_proto_rawDescGZIP() []byte {
	file_calendar_calendar_proto_rawDescOnce.Do(func() {
		file_calendar_calendar_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_calendar_calendar_proto_rawDesc), len(file_calendar_calendar_proto_rawDesc)))
	})
	return file_calendar_calendar_proto_rawDescData
}

var file_calendar_calendar_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_calendar_calendar_proto_goTypes = []any{
	(*CreateEventResponse)(nil),            // 0: calendar.CreateEventResponse
	(*UpdateEventResponse)(nil),            // 1: calendar.UpdateEventResponse
	(*DeleteEventRequest)(nil),             // 2: calendar.DeleteEventRequest
	(*DeleteEventResponse)(nil),            // 3: calendar.DeleteEventResponse
	(*GetEventByIDRequest)(nil),            // 4: calendar.GetEventByIDRequest
	(*GetEventByIDResponse)(nil),           // 5: calendar.GetEventByIDResponse
	(*ListEventsRequest)(nil),              // 6: calendar.ListEventsRequest
	(*ListEventsResponse)(nil),             // 7: calendar.ListEventsResponse
	(*ListEventsByUserRequest)(nil),        // 8: calendar.ListEventsByUserRequest
	(*ListEventsByUserInRangeRequest)(nil), // 9: calendar.ListEventsByUserInRangeRequest
	(*Event)(nil),                          // 10: calendar.Event
}
var file_calendar_calendar_proto_depIdxs = []int32{
	10, // 0: calendar.GetEventByIDResponse.event:type_name -> calendar.Event
	10, // 1: calendar.ListEventsResponse.events:type_name -> calendar.Event
	10, // 2: calendar.CalendarService.CreateEvent:input_type -> calendar.Event
	10, // 3: calendar.CalendarService.UpdateEvent:input_type -> calendar.Event
	2,  // 4: calendar.CalendarService.DeleteEvent:input_type -> calendar.DeleteEventRequest
	4,  // 5: calendar.CalendarService.GetEventByID:input_type -> calendar.GetEventByIDRequest
	6,  // 6: calendar.CalendarService.ListEvents:input_type -> calendar.ListEventsRequest
	8,  // 7: calendar.CalendarService.ListEventsByUser:input_type -> calendar.ListEventsByUserRequest
	9,  // 8: calendar.CalendarService.ListEventsByUserInRange:input_type -> calendar.ListEventsByUserInRangeRequest
	0,  // 9: calendar.CalendarService.CreateEvent:output_type -> calendar.CreateEventResponse
	1,  // 10: calendar.CalendarService.UpdateEvent:output_type -> calendar.UpdateEventResponse
	3,  // 11: calendar.CalendarService.DeleteEvent:output_type -> calendar.DeleteEventResponse
	5,  // 12: calendar.CalendarService.GetEventByID:output_type -> calendar.GetEventByIDResponse
	7,  // 13: calendar.CalendarService.ListEvents:output_type -> calendar.ListEventsResponse
	7,  // 14: calendar.CalendarService.ListEventsByUser:output_type -> calendar.ListEventsResponse
	7,  // 15: calendar.CalendarService.ListEventsByUserInRange:output_type -> calendar.ListEventsResponse
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_calendar_calendar_proto_init() }
func file_calendar_calendar_proto_init() {
	if File_calendar_calendar_proto != nil {
		return
	}
	file_calendar_events_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_calendar_calendar_proto_rawDesc), len(file_calendar_calendar_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_calendar_calendar_proto_goTypes,
		DependencyIndexes: file_calendar_calendar_proto_depIdxs,
		MessageInfos:      file_calendar_calendar_proto_msgTypes,
	}.Build()
	File_calendar_calendar_proto = out.File
	file_calendar_calendar_proto_goTypes = nil
	file_calendar_calendar_proto_depIdxs = nil
}
